name: "build"
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_and_apk:
    name: "Local tests and APKs"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run screenshot tests
        id: verifyScreenshots
        continue-on-error: true
        run: ./gradlew verifyPaparazziDemoDebug

      - name: Prevent pushing new screenshots if this is a fork
        id: checkfork
        continue-on-error: false
        if: steps.verifyScreenshots.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Screenshot tests failed, please create a PR in your fork first." && exit 1

      - name: Generate new screenshots if verification failed and it's a PR
        id: recordScreenshots
        if: steps.verifyScreenshots.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./gradlew recordPaparazziDemoDebug

      - name: Push new screenshots if available
        uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.recordScreenshots.outcome == 'success'
        with:
          file_pattern: '*/*.png'
          disable_globbing: true
          commit_message: "ðŸ¤– Update screenshots"

      - name: Run local tests
        if: always()
        run: ./gradlew testDebug

      - name: Build all build type and flavor permutations
        run: ./gradlew :app:assemble

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: '**/build/outputs/apk/**/*.apk'

      - name: Upload test results (XML)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'
