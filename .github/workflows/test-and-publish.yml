name: "Test and Publish"
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: "Test"
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
            add-job-summary-as-pr-comment: 'on-failure'
            build-scan-publish: true
            build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
            build-scan-terms-of-use-agree: 'yes'

      - name: Run screenshot tests
        id: verifyScreenshots
        continue-on-error: true
        run: ./gradlew verifyPaparazziDebug

      - name: Prevent pushing new screenshots if this is a fork
        id: checkfork
        continue-on-error: false
        if: steps.verifyScreenshots.outcome == 'failure' && github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "::error::Screenshot tests failed, please create a PR in your fork first." && exit 1

      - name: Generate new screenshots if verification failed and it's a PR
        id: recordScreenshots
        if: steps.verifyScreenshots.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          ./gradlew recordPaparazziDebug

      - name: Push new screenshots if available
        uses: stefanzweifel/git-auto-commit-action@v7
        if: steps.recordScreenshots.outcome == 'success'
        with:
          file_pattern: '*/*.png'
          disable_globbing: true
          commit_message: "ðŸ¤– Update screenshots"

      - name: Run local tests
        if: always()
        run: ./gradlew testDebug

      - name: Upload test results (XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'

  publish:
    name: "Publish"

    if: github.ref == 'refs/heads/main'

    runs-on: macos-15
    needs: [ build_and_test ]
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: 21

      - uses: gradle/gradle-build-action@v3

      - name: GitHub Release and Publish to Maven Central
        run: ./gradlew githubRelease publishAndReleaseToMavenCentral --no-configuration-cache
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_KEY_PASSWORD }}
